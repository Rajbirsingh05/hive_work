1. Download vechile sales data -> https://github.com/shashank-mishra219/Hive-Class/blob/main/sales_order_data.csv

2. Store raw data into hdfs location

Query: - copying data from local to hdfs location, below is the query  
hdfs dfs -put /home/cloudera/hive_class/sales_order_data.csv /user/cloudera

3. Create a internal hive table "sales_order_csv" which will store csv data sales_order_csv .. make sure to skip header row while creating table

Query:-  

hive> create table sales_order_csv
    > (
    > ORDERNUMBER int,
    > QUANTITYORDERED int,
    > PRICEEACH float,
    > ORDERLINENUMBER int,
    > SALES float,
    > STATUS string,
    > QTR_ID int,
    > MONTH_ID int,
    > YEAR_ID int,
    > PRODUCTLINE string,
    > MSRP int,
    > PRODUCTCODE string,
    > PHONE string,
    > CITY string,
    > STATE string,
    > POSTALCODE string,
    > COUNTRY string,
    > TERRITORY string,
    > CONTACTLASTNAME string,
    > CONTACTFIRSTNAME string,
    > DEALSIZE string
    > )
    > row format delimited
    > fields terminated by ','
    > tblproperties("skip.header.line.count" = "1");
OK

4. Load data from hdfs path into "sales_order_csv" 

Query:- 

load data inpath /user/cloudera/sales_order_data.csv into table sales_order_csv

5. Create an internal hive table which will store data in ORC format "sales_order_orc"

Query: -
hive> create table sales_order_orc
    > (
    > ORDERNUMBER int,
    > QUANTITYORDERED int,
    > PRICEEACH float,
    > ORDERLINENUMBER int,
    > SALES float,
    > STATUS string,
    > QTR_ID int,
    > MONTH_ID int,
    > YEAR_ID int,
    > PRODUCTLINE string,
    > MSRP int,
    > PRODUCTCODE string,
    > PHONE string,
    > CITY string,
    > STATE string,
    > POSTALCODE string,
    > COUNTRY string,
    > TERRITORY string,
    > CONTACTLASTNAME string,
    > CONTACTFIRSTNAME string,
    > DEALSIZE string
    > )
    > row format delimited
    > fields terminated by ','
    > stored as orc;
OK


6. Load data from "sales_order_csv" into "sales_order_orc"

Query:-  
from sales_order_csv insert overwrite table sales_order_orc select *

Perform below menioned queries on "sales_order_orc" table :

a. Calculatye total sales per year
query: - hive> select year_id, sum(sales) as total_sales from sales_order_orc group by year_id;

b. Find a product for which maximum orders were placed

Query: - select productline, sum(quantityordered) as total_order from ssales_order_orc group by productline order by total_order desc;

c. Calculate the total sales for each quarter

Query:- select qtr_id, sum(sales) as total_sales from sales_order_orc group by qtr_id;

1       2350817.726501465
2       2048120.3029174805
3       1758910.808959961
4       3874780.010925293


d. In which quarter sales was minimum

Query: -  select qtr_id, sum(sales) as total_sales from sales_order_orc group by qtr_id order by total_sales limit 1;

e. In which country sales was maximum and in which country sales was minimum

Query: for the country that has done maximum sales

    select country, sum(sales)as total_sales from sales_order_orc group by country order by total_sales desc limit 1

Query: for the country that has done minimum sales

    select country, sum(sales)as total_sales from sales_order_orc group by country order by total_sales limit 1

f. Calculate quartelry sales for each city

Query: -

select qtr_id, city, sum(sales) from sales_order_orc group by city,qtr_id;  

h. Find a month for each year in which maximum number of quantities were sold

Query: - 